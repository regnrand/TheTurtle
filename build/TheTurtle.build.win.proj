<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <RootDir>$(teamcity_build_checkoutDir)</RootDir>
  </PropertyGroup>

  <UsingTask TaskName="StampAssemblies" AssemblyFile="$(RootDir)/lib/build/Palaso.BuildTasks.dll" />
  <UsingTask TaskName="MakeWixForDirTree" AssemblyFile="$(RootDir)/lib/build/Palaso.BuildTasks.dll" />
  <UsingTask TaskName="Split" AssemblyFile="$(RootDir)/lib/build/Palaso.BuildTasks.dll" />
  <UsingTask TaskName="FileUpdate" AssemblyFile="$(RootDir)/lib/build/Palaso.BuildTasks.dll" />
  <!-- <UsingTask TaskName="NUnitTeamCity" AssemblyFile="$(teamcity_dotnet_nunitlauncher_msbuild_task)" />-->
  <!-- From http://msbuildtasks.tigris.org/ Has UnZip task -->
  <Import Project="$(MSBuildExtensionsPath)/MSBuildCommunityTasks/MSBuild.Community.Tasks.Targets" />
  <Import Project="$(RootDir)/build/build.common.proj" />

  <!-- ***************** Main build ***************** -->
  <PropertyGroup>
    <Solution>TheTurtle_VS2010.sln</Solution>
    <ApplicationName>TheTurtle</ApplicationName>
  </PropertyGroup>

  <Target Name="CreateDirectories">
    <MakeDir Directories="$(RootDir)/output/" />
    <MakeDir Directories="$(RootDir)/output/Common" />
    <MakeDir Directories="$(RootDir)/output/Installer/" />
    <MakeDir Directories="$(RootDir)/Download" />
    <MakeDir Directories="$(RootDir)/Download/Common" />
    <MakeDir Directories="$(RootDir)/Download/Win" />
    <MakeDir Directories="$(RootDir)/Mercurial" />
    <MakeDir Directories="$(RootDir)/MercurialExtensions" />
  </Target>

  <ItemGroup>
    <ExistingObjectFiles Include="$(RootDir)/**/obj/**/*;$(RootDir)/output/**/*" Exclude="$(RootDir)/.hg/**/*" />
  </ItemGroup>
  <Target Name="Clean">
    <Message Text="Starting Clean" />
    <Delete Files="@(ExistingObjectFiles)" />
    <RemoveDir Directories="$(RootDir)\output\;$(RootDir)\Mercurial\;$(RootDir)\MercurialExtensions\" />
    <Message Text="End Clean" />
  </Target>

  <Target Name="Build" DependsOnTargets="Clean;CreateDirectories">
    <CallTarget Targets="SetAssemblyVersion" />
    <CallTarget Targets="UnzipMercurial" />
    <CallTarget Targets="CopyMercurialExtensions" />
    <CallTarget Targets="Compile" />
    <Message Text="Build Complete" />
  </Target>

  <!-- Extract a zip file-->
  <Target Name="UnzipMercurial">
    <Unzip ZipFileName="$(RootDir)\lib\Mercurial.zip" TargetDirectory="$(RootDir)" />
  </Target>
  <ItemGroup>
    <MercurialExtensionFiles Include="C:\Dev\MercurialExtensions\**\*.*" />
  </ItemGroup>
  <Target Name="CopyMercurialExtensions">
    <Copy SourceFiles="@(MercurialExtensionFiles)" DestinationFiles="@(MercurialExtensionFiles->'$(RootDir)\MercurialExtensions\%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <Target Name="Compile">
    <MSBuild Projects="$(RootDir)/$(Solution)" Targets="Build" Properties="Configuration=$(Configuration)"/>
  </Target>

  <!-- ***************** Testing ***************** -->
  <Target Name="Test" DependsOnTargets="Build">
    <ItemGroup>
      <TestAssemblies Include="$(RootDir)/output/$(Configuration)/*Tests.dll;" Exclude="**\obj\**" />
    </ItemGroup>
    <NUnitTeamCity Assemblies="@(TestAssemblies)" ExcludeCategory="SkipOnTeamCity" />
  </Target>

  <!-- *********************** Installer stuff below.  ******************************* -->

  <Target Name="Installer" DependsOnTargets="VersionNumbers; CreateDirectories; Test">
    <Copy SourceFiles="$(RootDir)\Installer\TheTurtleInstaller.wxs" DestinationFolder="$(RootDir)\output\Installer" />
    <FileUpdate File="$(RootDir)\Installer\TheTurtleInstaller.wxs" Regex="Property_ProductVersion = &quot;.*&quot;" ReplacementText="Property_ProductVersion = &quot;$(Version)&quot;" />

    <Message Text="Making Installer Version: $(Version)" Importance="high" />
    <MSBuild Projects="$(RootDir)\Installer\TheTurtleInstaller.wixproj" />

    <!-- Copy TheTurtleInstaller.wxs back so it appears we aren't modifying the original, which then is a pain on dev machines -->
    <Copy SourceFiles="$(RootDir)\output\Installer\TheTurtleInstaller.wxs" DestinationFolder="$(RootDir)\Installer" />
  </Target>

</Project>
